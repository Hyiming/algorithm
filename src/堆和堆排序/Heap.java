package 堆和堆排序;/** * @auther YiMing Huang * @date 2020/3/9 20:01 */public class Heap {    // 数组，下表从1开始存储数据    private int[] a;    // 堆可以存储的最大数据个数    private int n;    // 堆中已经存储的数据个数    private int count;    public Heap(int capacity) {        a = new int[capacity + 1];        n = capacity;        count = 0;    }    public void insert(int data) {        if (count >= n) return; // 堆满了        ++count;        a[count] = data;        int i = count;        while (i / 2 > 0 && a[i] > a[i / 2]) { // 自下往上堆化//            swap(a, i, i / 2); // swap()函数作用：交换下标为i和i/2的两个元素            i = i / 2;        }    }}