package 常用排序.快速排序.单边循环法;import java.util.Arrays;import java.util.LinkedList;public class Solution{    public static void quickSort(int[] arr, int startIndex, int endIndex) {        //判断递归结束条件 startIndex > endIndex        if (startIndex >= endIndex) {            return;        }        //得到基准元素位置        int pivotIndex = partition(arr,startIndex,endIndex);        quickSort(arr , startIndex,pivotIndex-1);        quickSort(arr , pivotIndex+1 ,endIndex);    }    /**     * 分治     * @param arr           待交换数组     * @param startIndex    起始下标     * @param endIndex      结束下标     * @return     */    private static int partition(int[] arr, int startIndex, int endIndex) {        //pivot 支点        int pivot = arr[startIndex];        int mark = startIndex;        for (int i = startIndex+1 ; i <= endIndex ; i++){            if (arr[i] < pivot){                mark ++;                int p = arr[mark];                arr[mark] = arr[i];                arr[i] = p;            }        }        arr[startIndex] = arr[mark];        arr[mark] = pivot;        return mark;    }    //测试    public static void main(String[] args) {        int[] arr = new int[] {4,4,6,5,3,2,8,1};        quickSort(arr,0,arr.length-1);        System.out.println(Arrays.toString(arr));    }}