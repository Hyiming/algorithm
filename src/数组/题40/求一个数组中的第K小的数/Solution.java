package 数组.题40.求一个数组中的第K小的数;import java.util.ArrayList;public class Solution {    public Integer GetLeastNumbers_Solution(int [] input, int k) {        ArrayList<Integer> list = new ArrayList<>();        int left = 0;        int right = input.length-1;        quickSort(input,left,right);        if(k <= input.length){            for (int i = 0; i < k; i++) {                list.add(input[i]);            }        }        return list.get(k-1);    }    /**     * 借助快排实现     * @param arr     * @param startIndex     * @param endIndex     */    public static void quickSort(int[] arr, int startIndex, int endIndex) {        //判断递归结束条件 startIndex > endIndex        if (startIndex >= endIndex) {            return;        }        //得到基准元素位置        int pivotIndex = partition(arr,startIndex,endIndex);        quickSort(arr , startIndex,pivotIndex-1);        quickSort(arr , pivotIndex+1 ,endIndex);    }    /**     * 分治     * @param arr           待交换数组     * @param startIndex    起始下标     * @param endIndex      结束下标     * @return     */    private static int partition(int[] arr, int startIndex, int endIndex) {        //pivot 支点        int pivot = arr[startIndex];        int mark = startIndex;        for (int i = startIndex+1 ; i <= endIndex ; i++){            if (arr[i] < pivot){                mark ++;                int p = arr[mark];                arr[mark] = arr[i];                arr[i] = p;            }        }        arr[startIndex] = arr[mark];        arr[mark] = pivot;        return mark;    }    public static void main(String[] args) {        int arr [] = {4,5,1,6,2,7,3,8};        Solution solution = new Solution();        Integer integer = solution.GetLeastNumbers_Solution(arr, 4);        System.out.println(integer);    }}